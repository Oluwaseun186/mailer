name: CI/CD Pipeline

on: 
  push:
    branches: 
      - master  # Change 'main' to the branch you want to trigger the action

jobs: 
  Build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Greeting
        run: echo "Hello World users"  

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Build Docker Image
        env:
          image_name: app_test_image
          version: 1.0.0
          username: oluwaseun7
        run: |
          docker build -t $username/$image_name:$version .

      - name: Login to Docker Hub Account
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        env:
          image_name: app_test_image
          version: 1.0.0
          username: oluwaseun7
        run: |
          docker push $username/$image_name:$version

      - name: Install Trivy
        env:
          image_name: app_test_image
          version: 1.0.0
          username: oluwaseun7
        run: |
            wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.57.0_Linux-64bit.deb
            sudo dpkg -i trivy_0.57.0_Linux-64bit.deb
      - name: Scan Docker Image for Vulnerabilities
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL $username/$image_name:$version
      - name: Run Tests
        run: |
          echo "Running tests..."
          npm test || { echo 'Tests failed'; exit 1; }

  Deploy:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub Account
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull and Deploy Docker Image
        env:
          image_name: app_test_image
          version: 1.0.0
          username: oluwaseun7
        run: |
          docker pull $username/$image_name:$version
          docker run -d -p 8080:80 $username/$image_name:$version

